/*
Задача 6.
Сиракузская последовательность. Рассмотрим некоторое натуральное число n.
Если оно четное, то разделим его на 2, иначе - умножим на 3 и прибавим 1. 
Будем повторять такие действия (шаги), пока не получится 1. 
Полученная последовательность называется сиракузская последовательность, 
а наибольшее из чисел этой последовательности - ее вершиной.
Требуется составить программу, вычисляющую для заданного n последовательность,
 подсчитывающую число шагов в ней и находящую ее вершину.
*/

#include <iostream>

int main()
{
    setlocale(LC_ALL, "");

    int n;
    do {
        std::cout << "Ваше n = ";
        std::cin >> n;
    } while (n < 2);
    std::cout << std::endl;

    int k = 0;
    int max = n;

    while (n != 1)
    {
        if (n % 2 == 0)
        {
            n /= 2;
            if (max < n)
                max = n;
            ++k;
        }
        else
        {
            n = n * 3 + 1;
            if (max < n)
                max = n;
            ++k;
        }
        std::cout << "    " << "Шаг " << k << "\t" << "|" << "\t" << "n = " << n;
        if (max == n)
            std::cout << "  <-- Новая вершина";
        std::cout << std::endl;
    }
    std::cout << std::endl;

    std::cout << "    " << "====>  " << "Число шагов  " << k << "  <====" << std::endl << "    " << "====>  " << "Вершина  " << max << "  <====" << std::endl;
    return 0;
}
